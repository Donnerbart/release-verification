#!/usr/bin/env bash

boxCount=${1:-4}
memberBox=${2:-0}
members=${3:-4}
clients=${4:-100}
duration=${5:-24h}
clusterSize=${members}

memberStartHeap=3G
memberMaxHeap=3G

partitions=271
monitorSec=30
statsInterval=30

gcArgs="$gcArgs -verbose:gc -Xloggc:verbosegc.log"
gcArgs="$gcArgs -XX:+PrintGCTimeStamps -XX:+PrintGCDetails -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCApplicationConcurrentTime"

memberJvmArgs="$memberJvmArgs -Dhazelcast.enterprise.license.key=${HAZELCAST_EE_KEY}"
memberJvmArgs="$memberJvmArgs -Dhazelcast.partition.count=$partitions -Dhazelcast.initial.min.cluster.size=${clusterSize}"
memberJvmArgs="$memberJvmArgs -Dhazelcast.performance.monitoring.enabled=true -Dhazelcast.performance.monitor.delay.seconds=$monitorSec -Dhazelcast.performance.monitor.human.friendly.format=true"
memberJvmArgs="$memberJvmArgs -Dhazelcast.health.monitoring.level=NOISY -Dhazelcast.health.monitoring.delay.seconds=$monitorSec"
memberJvmArgs="$memberJvmArgs -Xms$memberStartHeap"
memberJvmArgs="$memberJvmArgs -Xmx$memberMaxHeap"
memberJvmArgs="$memberJvmArgs -ea $gcArgs -XX:+HeapDumpOnOutOfMemoryError"

memberJvmArgs="$memberJvmArgs -Dhazelcast.hotrestart.gc.stuck.detect.threshold=10000"

memberJvmArgs="$memberJvmArgs -XX:+UnlockCommercialFeatures -XX:+FlightRecorder -XX:StartFlightRecording=delay=1m,duration=2h,filename=hot-member.jfr,settings=debug.jfc"
memberJvmArgs="$memberJvmArgs -Dhazelcast.hotrestart.free.native.memory.percentage=15"


clientStartHeap=2G
clientMaxHeap=2G
clientJvmArgs="-Xms$clientStartHeap -Xmx$clientMaxHeap -Dhazelcast.enterprise.license.key=${HAZELCAST_EE_KEY}"
clientJvmArgs="$clientJvmArgs $gcArgs -XX:+HeapDumpOnOutOfMemoryError"


outputPath="$(pwd)/output/$(date '+%Y_%m_%d-%H_%M_%S')"
coordinator	--dedicatedMemberMachines ${memberBox} \
    		--memberWorkerCount ${members} \
	        --clientWorkerCount ${clients} \
	        --duration ${duration} \
	        --enterpriseEnabled true \
	        --workerVmOptions "${memberJvmArgs}" \
     		--clientWorkerVmOptions "${clientJvmArgs}" \
	        --parallel \
	        --tolerableFailure workerTimeout \
	        --workerStartupTimeout 900 \
	        test.properties

provisioner --download ${outputPath}

forIpsIn agents.txt scpDown *Timer*.csv ${outputPath}/metrics ec2-user
sshAll 'rm *Timer*.csv' ec2-user


chmod 644 nohup.out
mv nohup.out ${outputPath}/
mv failures-* ${outputPath}/
cp run ${outputPath}/
cp test.properties ${outputPath}/
cp info.html ${outputPath}/

cd ${outputPath}
chartJavaMetrics putTimer*.csv put-Metrics
chartJavaMetrics getTimer*.csv get-Metrics

chartHelthMonitor

echo "THE-END"
